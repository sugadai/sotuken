{"version":3,"sources":["app.js"],"names":["require","text","express","session","MySQLStore","bcrypt","redirect","json","type","app","mysql","cli","fs","stringify","Iconv","time","TIME","format","e","nodemailer","http","server","createServer","io","port","use","urlencoded","extended","client","createConnection","host","user","password","database","multipleStatements","connect","err","console","log","stack","options","sessionStore","sess","secret","cookie","maxAge","store","resave","saveUninitialized","get","set","secure","porter","createTransport","service","auth","pass","PythonShell","obj","record","user_id","rate_data","rate_time","rate_date","pythonroad","promise","Promise","resolve","run","result","name","email","flg","JSON","parse","Object","keys","length","id","data","date","query","results","d","Date","date2","d2","newdate","getTime","datenow","seconds","Math","floor","sendMail","from","to","subject","info","error","req","res","next","userId","undefined","locals","username","deviceid","numlimit","__dirname","render","errors","post","body","push","plain","hash","compare","isEqual","destroy","devicecode","insertId","url","params","forEach","index","toLocaleString","csvString","str","substr","csvStringObj","header","quoted_string","once","socket","emit","csvStringObj2","listen"],"mappings":"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","sourcesContent":["const { text } = require(\"express\");\nconst express = require(\"express\");\nconst session = require('express-session');\nconst MySQLStore= require('express-mysql-session')(session);//セッション情報をDBに保存\nconst bcrypt = require('bcrypt');\nconst { redirect, json, type } = require(\"express/lib/response\");\nconst app = express();\nconst mysql = require('mysql');\nconst cli = require(\"nodemon/lib/cli\");\nconst fs = require('fs');//ファイルを読み書きできる\nconst { stringify } = require('csv-stringify/sync');//データをCSVファイル化\nconst Iconv = require('iconv-lite');\nconst { time } = require(\"console\");\nconst { TIME } = require(\"mysql/lib/protocol/constants/types\");\nconst { format } = require(\"path\");\nconst e = require(\"express\");\nconst nodemailer = require('nodemailer');//メール送信ライブラリ\nconst http = require('http');\nconst server = http.createServer(app)\nconst io = require('socket.io')(server)\nconst port = 3000;\n\n\napp.use(express.static('public'));\napp.use(express.urlencoded({extended: false}));\n\n//DB接続\nconst client = mysql.createConnection({\n    host: '127.0.0.1',\n    user: 'root',\n    password: 'm.s.l_sd6016',\n    database: 'health',\n    multipleStatements: true\n});\n\n//DBと接続できなければerr\nclient.connect((err) => {\n  if (err) {\n    console.log('error connecting: ' + err.stack);\n    return;\n  }\n  console.log('success');\n});\n\n//express-mysql-sessionのmysqo接続\nconst options = {\n  host: '127.0.0.1',\n  port: 3306,\n  user: 'root',\n  password: 'm.s.l_sd6016',\n  database: 'my_database'\n};\n\n//my_databseのセッション情報を随時更新\nconst sessionStore = new MySQLStore(options);\n//セッション管理オプション\nconst sess = {\n  secret: 'secretsecretsecret',\n  cookie: { maxAge: 600000 },//セッション継続時間\n  store: new MySQLStore(options),\n  resave: false,\n  saveUninitialized: false,\n}\nif (app.get('env') === 'production') {\n  app.set('trust proxy', 1)\n  sess.cookie.secure = true//通信がhttpsの場合cookieを有効にする(本番環境良向き)\n}\napp.use(session(sess))\n\n\n//認証情報とnodemailerオブジェクトの生成\nconst porter = nodemailer.createTransport({\n  service : \"gmail\",\n  port : \"465\",\n  secure : \"true\",\n  auth :{\n    //自分のアドレスとgmailのアプリパスワード\n    user : 'dayoujianyuan091@gmail.com',\n    pass : \"xxlfdjfoilunnheo\"\n  }\n})\n\n// test.pyを呼び出すモジュール\nvar {PythonShell} = require('python-shell');\nlet obj;\nlet record,user_id,rate_data,rate_time,rate_date;\nasync function pythonroad(){\n    while(true){\n        let promise = new Promise((resolve) => {\n          //test.pyを実行\n            PythonShell.run('test.py', null,function(err, result) {\n              let name;\n              let email;\n              let flg = 0;\n              if (err) throw err;\n                obj = JSON.parse(result);\n                for(record=0;record<Object.keys(obj).length;record++){\n                  user_id = obj[record].id;\n                  rate_data = obj[record].data;\n                  rate_date = obj[record].date;\n                  rate_time = obj[record].time;\n                  client.query(\n                    'SELECT * FROM usertest WHERE deviceid = ?',\n                    [user_id],\n                    (err,results)=>{\n                      name = results[0]['username'];\n                      email = results[0]['email']\n                      //現在時刻の取得し5分マイナスした時刻を変数に入れる\n                      // const d = new Date();\n                      // const hours = d.getHours().toString().padStart(2,0)\n                      // const minuts = d.getMinutes().toString().padStart(2,0)\n                      // const secounds = d.getSeconds().toString().padStart(2,0)\n                      // var formatted = `\n                      // ${d.getFullYear()}-${d.getMonth()+1}-${d.getDate()} ${hours}:${minuts-5}:${secounds}`;\n                      // console.log(formatted)\n                      if(results[0]['numlimit'] < rate_data){\n                        //現在時刻の取得し5分マイナスした時刻をフォーマットする\n                        const d = new Date();\n                        let date2 = rate_date + ' ' + rate_time;\n                        const d2 = new Date(date2);\n                        let newdate = d2.getTime();\n                        let datenow = d.getTime();\n                        // console.log(formatted)\n                        let seconds =  (datenow - newdate) / 1000;\n                        seconds = Math.floor(seconds)\n                        // console.log(seconds);\n                        if(300 >= seconds){\n                          porter.sendMail({\n                            from : \"dayoujianyuan091@gmail.com\",\n                            to : email,\n                            subject : \"お知らせ！\",\n                            text : `${name}さんは規定の心拍数を超えたことを知らせます。`\n                          },(err,info)=>{\n                            if(err){\n                                 console.log(err)\n                                 return\n                            }\n                            console.log('Ok send mail!!');\n                          })\n                        }\n                      }\n                    }\n                  ), \n                  console.log(`${record}個目のレコードのidは${user_id}・心拍数は${rate_data}・年月日は${rate_date}・時間は${rate_time}です。`);\n                  client.query(\n                    'INSERT INTO datatbl (deviceid,data,date,time) VALUE(?,?,?,?)',\n                    [user_id,rate_data,rate_date,rate_time],\n                    (error,result)=>{\n                      // console.log(`${record}個目のレコードのuser_idは${user_id}・rate_dataは${rate_data}・rate_dateは${rate_date}・rate_timeは${rate_time}です。`);\n                      // console.log(typeof(user_id))\n                    }\n                  )\n                }\n                // console.log(flg)\n                // if(flg === 1){\n                  // porter.sendMail({\n                  //   from : \"dayoujianyuan091@gmail.com\",\n                  //   to : email,\n                  //   subject : \"お知らせ！\",\n                  //   text : `${name}さんは規定の心拍数を超えたことを知らせます。`\n                  // },(err,info)=>{\n                  //   if(err){\n                  //        console.log(err)\n                  //        return\n                  //   }\n                  //   console.log('Ok send mail!!');\n                  // })\n                // }\n                resolve();\n            });\n        });\n        await promise;\n    }\n}\n\npythonroad();\n\n\n\n//全てのルーティング時にログインか非ログインかを判断するミドルウェア\napp.use((req,res,next)=>{\n  if (req.session.userId === undefined) {\n    console.log('ログインしていません');\n  } else {\n    console.log('ログインしています');\n    res.locals.userId = req.session.userId\n    res.locals.username = req.session.username\n    res.locals.email = req.session.email\n    res.locals.password = req.session.password\n    res.locals.deviceid = req.session.deviceid\n    // console.log(req.session.deviceid)\n    res.locals.numlimit = req.session.numlimit\n    // res.locals.password = req.session.password;\n  }\n  next();\n});\napp.set('views',__dirname+'/views');\n\n//テンプレートエンジン’ejs’を使用する宣言\napp.set(\"view engine\", \"ejs\");\n\n//トップページ表示\napp.get('/',(req,res,error) => {\n  console.log(error);\n  // if (req.session.views) {\n  //   req.session.views++;\n  // } else {\n  //   req.session.views = 1;\n  // }\n  // let views = req.session.views;\n  // console.log(views);\n  res.render('index');\n});\n\n\n\n//ログインページ表示\napp.get('/login',(req,res,error) => {\n  console.log(error);\n  res.render('login',{errors: [] });\n});\n\n//ログイン処理\napp.post('/login', (req, res ,next) => {\n  const email = req.body.email;\n  const password = req.body.password;\n  const errors = [];\n//空チェック機能\n  if(email === ''){\n    errors.push('メールアドレスが空です。');\n  }\n  if(password === ''){\n    errors.push('パスワードが空です。');\n  }\n  if(errors.length > 0){\n    res.render('login.ejs',{errors : errors});\n  }else{\n    next();\n  }\n},\n(req,res)=>{\n  const email = req.body.email;\n  client.query(\n    'SELECT * FROM usertest WHERE email = ?',\n    [email],\n    (error, results) => {\n      const errors = [];\n      if(results.length > 0){\n        const plain = req.body.password;\n        const hash = results[0].password;\n        // console.log(results);\n        //入力したパスワードをハッシュ化して比較\n        bcrypt.compare(plain,hash,(error,isEqual)=>{\n        if(isEqual){\n          //認証に成功すればセッション情報を保存し、ユーザーページにレダイレクトする\n          req.session.userId = results[0].id\n          req.session.email = results[0].email\n          req.session.username = results[0].username\n          req.session.deviceid = results[0].deviceid\n          req.session.numlimit = results[0].numlimit\n          // console.log(results[0].numlimit)\n          req.session.password = results[0].password;\n          // console.log('認証に成功しました');\n          res.redirect('/my');\n        }else{\n          //認証に失敗すればエラー配列と共にログインページにレスポンスする\n          errors.push('認証失敗しました。')\n          res.render('login',{errors:errors});\n        }\n        });\n      }else{\n        //入力したemailと一致しなければエラー配列と共にログインページにレスポンスする\n        errors.push('認証に失敗しました。');\n        res.render('login',{errors:errors});  \n      }\n    }\n  )\n}\n);\n\n\n//ログインページからトップページに戻る\napp.get('/return', (req, res) => {\n    req.session.destroy((error) => {\n      res.redirect('index');\n    });\n  });\n\n//ユーザーページを表示\napp.get('/my',(req,res)=>{\n    res.render(\"my\");\n});\n\n//新規登録ページを表示\napp.get('/signup',(req,res) => {\n    res.render(\"signup\",{errors: [] });\n});\n\n//新規登録処理\napp.post('/signup',(req,res,next)=>{\n  // //空チェック\n  // const username = req.body.username;\n  // const email = req.body.email;\n  // const password = req.body.password;\n  // const devicecode = req.body.devicecode;\n  // const errors = [];\n\n  // if(username === ''){\n  //   errors.push('ユーザー名が空です');\n  // }\n  // if(email === ''){\n  //   errors.push('メールアドレスが空です');\n  // }\n  // if(password === ''){\n  //   errors.push('パスワードが空です');\n  // }\n  // if(devicecode === ''){\n  //   errors.push('デバイスが空です。')\n  // }\n  // console.log(errors);\n  // if(errors.length > 0){\n  //   res.render('signup.ejs',{errors : errors});\n  // }else{\n  //   next();\n  // }\n  // },\n  // (req,res,next)=>{\n    // const devicecode = req.body.devicecode\n    // client.query(\n    //   'SELECT deviceid * FROM partienttbl WHEHE devicecode = ?',\n    //   [devicecode],\n    //   (err,results)=>{\n        \n    //   }\n    // )\n  // },\n  const devicecode = req.body.devicecode\n  client.query(\n    'SELECT deviceid FROM partienttbl WHERE devicecode = ?',\n    [devicecode],\n    (err,results)=>{\n      if(results.length > 0){\n        const deviceid = results[0].deviceid\n        const email = req.body.email;\n        client.query(\n          'SELECT * FROM usertest WHERE email = ? or deviceid = ?',\n          [email,deviceid],\n          (err,results)=>{\n            if(results.length > 0){\n              errors.push('このユーザーは既に登録済みです。')\n              console.log(errors)\n              res.render('signup',{errors : errors})\n            }else{\n              const username = req.body.username;\n              const password = req.body.password;\n              bcrypt.hash(password,10,(error,hash)=>{\n                client.query(\n                  'INSERT INTO usertest (username,email,password,deviceid) VALUES(?,?,?,?)',\n                  [username,email,hash,deviceid],\n                  (error,results)=>{\n                    //アカウント登録完了メールをユーザーに送る\n                    porter.sendMail({\n                      from : \"dayoujianyuan091@gmail.com\",\n                      to : email,\n                      subject : \"医療情報\",\n                      text : `${username}さんのユーザー登録が完了しました。`\n                    },(err,info)=>{\n                      if(err){\n                           console.log(err)\n                           return\n                      }\n                      console.log('Ok send mail!!');\n                    })\n                    // results[0].numlimit\n                    req.session.userId = results.insertId;\n                    req.session.username = username;\n                    req.session.email = email;\n                    req.session.password = password;\n                    req.session.deviceid = deviceid;\n                    req.session.numlimit = 100;\n                    res.redirect('/my');\n                  } \n                );\n              });\n            }\n          }\n        )\n      }else{\n        console.log('ユーザーコードが間違っています。')\n        errors.push('ユーザーコードが間違っています。')\n        res.render('signup',{errors : errors})\n      }\n    }\n  ) \n});\n\n//アカウント詳細ページを表示\napp.get('/acount',(req,res) => {\n  console.log(req.url)\n  res.render('acount');\n});\n\n//アカウント変更ページを表示\napp.get('/change', (req,res) => {\n  console.log(req.url)\n  res.render('change');\n})\n\n//アカウント変更処理\napp.post('/update/:id',(req,res,next)=>{\n  const username = req.body.username;\n  const email = req.body.email;\n  const password = req.body.password;\n  const deviceid = req.body.deviceid;\n  const numlimit = req.body.numlimit;\n  // console.log(numlimit)\n  const userId = req.params.id;\n  //パスワードのハッシュ化\n  if(password.length === 1){\n    client.query(\n      'UPDATE usertest SET username = ?, email = ?,deviceid = ?,numlimit = ? WHERE id = ?',\n      [username,email,deviceid,numlimit,userId],\n      (error,results)=>{\n        req.session.userId = userId;\n        req.session.email = email;\n        req.session.username = username;\n        req.session.password = password;\n        req.session.numlimit = numlimit;\n        res.redirect('/my');\n      }\n    )\n  }else{\n    bcrypt.hash(password,10,(error,hash)=>{\n      client.query(\n        'UPDATE usertest SET username = ?, email = ?, password = ?,deviceid = ?,numlimit = ? WHERE id = ?',\n        [username,email,hash,deviceid,numlimit,userId],\n        (error,results)=>{\n          console.log(results)\n          // console.log(results[0]);\n          req.session.userId = userId;\n          req.session.email = email;\n          req.session.username = username;\n          req.session.password = password;\n          req.session.numlimit = numlimit;\n          res.redirect('/my');\n        } \n      );\n    });\n  }\n});\n\n//アカウント削除処理\napp.post('/delete/:id',(req,res,next) =>{\n  console.log(req.params.id);\n  client.query(\n    'DELETE FROM usertest WHERE id = ?',\n    [req.params.id],\n    (error,results)=>{\n      res.redirect('/');\n    }\n  )\n})\n\n  \n//データをグラフで表示\napp.get('/data/:id',(req,res)=>{\n  console.log(req.url);\n  const deviceid = req.params.id;\n  client.query(\n    `SELECT * FROM datatbl WHERE deviceid = ? ;`,\n    [deviceid],\n    (err,results)=>{\n      results.forEach((e,index)=>{\n        results[index].date = e.date.toLocaleString();\n      })\n      if(err) throw err\n      //strigifyメソッドとparseメソッドでデータをcsvファイルにする\n      const csvString = JSON.stringify(results);\n      const str = JSON.parse(csvString);\n      str.forEach((data,index)=>{\n        str[index].date =(data.date.substr(0,10));\n      })\n      //csvファイル化\n      const csvStringObj = stringify(str,{\n        header:true,\n        quoted_string:false\n      })\n      // console.log(str)\n\n      io.once(\"connect\", (socket) => {\n        console.log(\"ユーザーが接続しました\");\n        let data = 'test';\n        // socket.on('emit',(msg)=>{\n        //   console.log(msg)\n        // });\n        io.emit('datas',csvStringObj);\n      });\n      // const csvStringSjis = Iconv.encode(csvStringObj,'Shift.JIS');\n      // fs.writeFileSync('./public/result.csv',csvStringSjis); \n      client.query(\n        'SELECT numlimit FROM usertest WHERE deviceid = ?',\n        [deviceid],\n        (err,results)=>{\n          req.session.numlimit = results[0].numlimit\n          // str.push(results);\n          // console.log(str[str.length-1])\n          const csvStringObj2 = stringify(results,{\n            header:true,\n            quoted_string:false\n          })\n          \n          io.once(\"connection\", (socket) => {\n            console.log(\"ユーザーが接続しました\");\n            // socket.on('emit',(msg)=>{\n              console.log(csvStringObj2)\n            // });\n            io.emit('limit',csvStringObj2);\n          });\n          // const csvStringSjis2 = Iconv.encode(csvStringObj2,'Shift.JIS');\n          // // console.log(csvStringObj,csvStringObj2)\n          // fs.writeFileSync('./public/limit.csv',csvStringSjis2); \n        }\n      )\n    }\n  ),\n  \n  client.query(\n    'SELECT data FROM datatbl WHERE data = (SELECT MAX(data) FROM datatbl) ; SELECT data FROM datatbl WHERE data = (SELECT MIN(data) FROM datatbl) ',\n    (error,results)=>{\n      if(error) throw error\n      // console.log(results)\n      res.render('data',{result : results})\n    }\n  )  \n});\n\n\n\n\n//トップページ戻り保存していたセッション情報を破棄する(ログアウト)\napp.get('/logout',(req,res)=>{\n  req.session.destroy((error)=>{\n    res.redirect('/');\n  });\n});\n\n//指定したポート番号でサーバ構築\nserver.listen(port,()=>{\n    console.log(\"server start!!\");\n});\n"],"file":"app.dev.js"}